
package ch.fhnw.ds.ws.graph.client.jaxws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "GraphServiceImpl", targetNamespace = "http://server.graph.ws.ds.fhnw.ch/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface GraphServiceImpl {


    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isDAG", targetNamespace = "http://server.graph.ws.ds.fhnw.ch/", className = "ch.fhnw.ds.ws.graph.client.jaxws.IsDAG")
    @ResponseWrapper(localName = "isDAGResponse", targetNamespace = "http://server.graph.ws.ds.fhnw.ch/", className = "ch.fhnw.ds.ws.graph.client.jaxws.IsDAGResponse")
    @Action(input = "http://server.graph.ws.ds.fhnw.ch/GraphServiceImpl/isDAGRequest", output = "http://server.graph.ws.ds.fhnw.ch/GraphServiceImpl/isDAGResponse")
    public boolean isDAG(
        @WebParam(name = "arg0", targetNamespace = "")
        Node arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "isTree", targetNamespace = "http://server.graph.ws.ds.fhnw.ch/", className = "ch.fhnw.ds.ws.graph.client.jaxws.IsTree")
    @ResponseWrapper(localName = "isTreeResponse", targetNamespace = "http://server.graph.ws.ds.fhnw.ch/", className = "ch.fhnw.ds.ws.graph.client.jaxws.IsTreeResponse")
    @Action(input = "http://server.graph.ws.ds.fhnw.ch/GraphServiceImpl/isTreeRequest", output = "http://server.graph.ws.ds.fhnw.ch/GraphServiceImpl/isTreeResponse")
    public boolean isTree(
        @WebParam(name = "arg0", targetNamespace = "")
        Node arg0);

}
